# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

# before_all do
#   ensure_git_branch
#   ensure_git_status_clean
#   git_pull
# end

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  # desc "Submit a new Beta Build to Crashlytics Beta"
  # lane :beta do
  #   gradle(task: "clean assembleRelease")
  #   crashlytics
  
  #   # sh "your_script.sh"
  #   # You can also use other beta testing services here
  # end

  desc "Deploy internal test to Google Play - version:[major|minor|fix]"
  lane :internal do |options|

    if (options[:version]=='major')
      gradle(task: "doMajorVersionIncrement")
    elsif (options[:version]=='minor')
      gradle(task: "doMinorVersionIncrement")
    elsif (options[:version]=='fix')
      gradle(task: "doFixVersionIncrement")
    else
      gradle(task: "doBuildNumberIncrement")
    end

    gradle(
      task: 'bundle',
      build_type: 'releaseStaging'
    )

    upload_to_play_store(
      track: 'internal',
      skip_upload_apk: 'true'
    )
  end

desc "Deploy production to Google Play - version:[major|minor|fix]"
  lane :production do |options|

    if (options[:version]=='major')
      gradle(task: "doMajorVersionIncrement")
    elsif (options[:version]=='minor')
      gradle(task: "doMinorVersionIncrement")
    elsif (options[:version]=='fix')
      gradle(task: "doFixVersionIncrement")
    else
      gradle(task: "doBuildNumberIncrement")
    end

    gradle(
      task: 'bundle',
      build_type: 'Release'
    )
    
    upload_to_play_store(
      track: 'production',
      skip_upload_apk: 'true'
    )
  end
end